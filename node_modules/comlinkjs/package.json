{
  "_args": [
    [
      "comlinkjs@2.3.3",
      "/home/james/Code/web-worker-comparison"
    ]
  ],
  "_from": "comlinkjs@2.3.3",
  "_id": "comlinkjs@2.3.3",
  "_inBundle": false,
  "_integrity": "sha512-mg7cSgc1fhChy9U5WcqmraLq8hIhiuJLJFLp/v3f4cHB5TELYfLkSMSCOzSOCHjpcUmG1DlGE8eDOoqfsWstMQ==",
  "_location": "/comlinkjs",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "comlinkjs@2.3.3",
    "name": "comlinkjs",
    "escapedName": "comlinkjs",
    "rawSpec": "2.3.3",
    "saveSpec": null,
    "fetchSpec": "2.3.3"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/comlinkjs/-/comlinkjs-2.3.3.tgz",
  "_spec": "2.3.3",
  "_where": "/home/james/Code/web-worker-comparison",
  "author": {
    "name": "Surma",
    "email": "surma@google.com"
  },
  "contributors": [
    {
      "name": "Surma",
      "email": "surma@google.com"
    },
    {
      "name": "Ian Kilpatrick",
      "email": "ikilpatrick@google.com"
    }
  ],
  "dependencies": {},
  "description": "Comlinkâ€™s goal is to make [WebWorkers][WebWorker] enjoyable. Instead of using `postMessage` to send messages back and forth, Comlink allows you to invoke functions, pass callbacks, add event listeners and create new instances of classes.",
  "devDependencies": {
    "babel-minify": "^0.3.0",
    "chai": "4.1.2",
    "eslint": "4.18.1",
    "eslint-config-google": "0.9.1",
    "karma": "2.0.0",
    "karma-chai": "0.1.0",
    "karma-chrome-launcher": "2.2.0",
    "karma-firefox-launcher": "1.1.0",
    "karma-mocha": "1.3.0",
    "karma-safari-launcher": "1.0.0",
    "karma-typescript": "3.0.12",
    "mocha": "5.0.1",
    "typescript": "2.7.2",
    "typescript-eslint-parser": "14.0.0"
  },
  "keywords": [],
  "license": "Apache-2.0",
  "main": "comlink.umd.js",
  "module": "comlink.es6.js",
  "name": "comlinkjs",
  "scripts": {
    "build": "rm -rf dist && mkdir dist && npm run compile && npm run mangle_global && npm run minify",
    "compile": "tsc --outDir dist -m none && mv dist/comlink.{,global.}js && mv dist/messagechanneladapter.{,global.}js && tsc --outDir dist -m es2015 && mv dist/comlink.{,es6.}js && mv dist/messagechanneladapter.{,es6.}js && tsc -d --outDir dist -m umd && mv dist/comlink.{,umd.}js && mv dist/messagechanneladapter.{,umd.}js",
    "linter": "eslint comlink.ts && eslint messagechanneladapter.ts",
    "mangle_global": "sed -i.bak -e 's!exports.Comlink!self.Comlink!' dist/comlink.global.js && sed -i.bak 's!^.*\"__esModule\".*$!!' dist/comlink.global.js && sed -i.bak -e 's!exports.MessageChannelAdapter!self.MessageChannelAdapter!' dist/messagechanneladapter.global.js && sed -i.bak -e 's!^.*\"__esModule\".*$!!' dist/messagechanneladapter.global.js",
    "minify": "babel-minify --mangle -o dist/comlink.global.{min.,}js && babel-minify --mangle -o dist/comlink.es6.{min.,}js && babel-minify --mangle -o dist/comlink.umd.{min.,}js && babel-minify --mangle -o dist/messagechanneladapter.global.{min.,}js && babel-minify --mangle -o dist/messagechanneladapter.es6.{min.,}js && babel-minify --mangle -o dist/messagechanneladapter.umd.{min.,}js",
    "mypublish": "npm run build && npm run test && cp README.md package.json dist && npm publish dist",
    "test": "npm run linter && npm run unittest && npm run build",
    "unittest": "karma start",
    "version": "sed -i.bak -e 's!comlinkjs@[0-9.]+!comlinkjs@'${npm_package_version}'!' README.md && git add README.md",
    "watchtest": "karma start --no-single-run --browsers ChromeHeadless",
    "watchtestharmony": "karma start --no-single-run --browsers ChromeCanaryHeadlessHarmony"
  },
  "typings": "comlink.d.ts",
  "version": "2.3.3"
}

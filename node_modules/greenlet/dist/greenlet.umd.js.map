{"version":3,"file":"greenlet.umd.js","sources":["../greenlet.js"],"sourcesContent":["/** Move an async function into its own thread.\n *  @param {Function} fn\tThe (async) function to run in a Worker.\n */\nexport default function greenlet(fn) {\n\tlet w = new Worker(URL.createObjectURL(new Blob([\n\t\t\t'onmessage=('+(\n\t\t\t\tf => ({ data }) => Promise.resolve().then(\n\t\t\t\t\t() => f.apply(f, data[1])\n\t\t\t\t).then(\n\t\t\t\t\td => { postMessage([data[0], null, d]); },\n\t\t\t\t\te => { postMessage([data[0], ''+e]); }\n\t\t\t\t)\n\t\t\t)+')('+fn+')'\n\t\t]))),\n\t\tc = 0,\n\t\tp = {};\n\tw.onmessage = ({ data: [c,e,d] }) => {\n\t\tp[c][e?1:0](e||d);\n\t\tdelete p[c];\n\t};\n\treturn (...a) => new Promise( (y, n) => {\n\t\tp[++c] = [y, n];\n\t\tw.postMessage([c, a]);\n\t});\n}\n"],"names":["fn","let","w","Worker","URL","createObjectURL","Blob","f","ref","data","Promise","resolve","then","apply","d","postMessage","e","c","p","onmessage","y","n","a"],"mappings":"8KAGe,SAAkBA,GAChCC,IAAIC,EAAI,IAAIC,OAAOC,IAAIC,gBAAgB,IAAIC,MACzC,uBACCC,mBAAMC,OAAEC,gBAAWC,QAAQC,UAAUC,uBAC9BL,EAAEM,MAAMN,EAAGE,EAAK,MACrBG,cACDE,GAAOC,aAAaN,EAAK,GAAI,KAAMK,cACnCE,GAAOD,aAAaN,EAAK,GAAI,GAAGO,QAEhC,KAAKhB,EAAG,QAEXiB,EAAI,EACJC,KAKD,OAJAhB,EAAEiB,mBAAaX,SAAQA,OAACS,OAAED,OACzBE,EAAED,GAAGD,EAAE,EAAE,GAAGA,gBACLE,EAAED,6EAEO,IAAIP,iBAAUU,EAAGC,GACjCH,IAAID,IAAMG,EAAGC,GACbnB,EAAEa,aAAaE,EAAGK"}